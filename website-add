#!/usr/bin/env ruby

VHOST_CONF_TPL =<<-CONF
<VirtualHost *:80>
    ServerName www.{domain}
    ServerAdmin webmaster@{domain}
    ServerAlias {domain}

    DocumentRoot /home/{domain}/web/current/public

    <Directory /home/{domain}/web/current/public>
        Include conf.d/common/options_and_allows.conf
    </Directory>

    Include conf.d/common/maintenance.conf

    LogLevel warn
    CustomLog logs/{domain}.log combined
</VirtualHost>

vim:syntax=apache:tw=2:sw=2:
CONF

HTTP_CONFD_DIR = File.join('/', 'etc', 'httpd', 'conf.d')

@history = []
@domain = ""

def println(txt)
  puts "=> #{txt}"
end

def print_history(status, msg = '')
  println "[#{status}] #{msg}" 
  unless @history.empty?
    puts "Changes: "
    @history.each{ |task| println task}
  end
end

def fail_safe(msg = nil)
  print_history 'ERROR', "#{msg || "unexpected error"}"
  exit
end

def system_do(cmd = nil, *args)
  cmd_str = "#{cmd} #{args.join(' ')}" 
  println "#{cmd_str}: #{(result = system(cmd, *args))}"
  fail_safe "Executing #{cmd_str} failed!" unless result
  @history << cmd_str
end

def input(msg)
  print "#{msg}: "
  STDIN.gets.chomp.strip
end

def yes?(question)
  input("#{question} [yes/no]") == 'yes'
end

while(@domain.length < 1)
  @domain = input('Please enter a domain name (e.g. example.com)')
end

home = "/home/#{@domain}"
web = "#{home}/web"
release = "#{web}/releases/#{Time.now.to_i}" 
pub ="#{release}/public"

system_do('useradd', @domain)
system_do('mkdir', '-p', pub)
system_do('ln', '-s', release, "#{web}/current")
system_do('chown', '-R', "#{@domain}:#{@domain}", "#{web}")
system_do('chmod', 'uga+rx', home)

File.open("#{pub}/index.html", 'w') { |file| file.write "Welcome, #{@domain}" }

vhost_conf = File.join(HTTP_CONFD_DIR, "#{@domain}.conf")
if !File.file?(vhost_conf) || yes?("Apache VHost configuration file '#{vhost_conf}' exists. Overwrite?") 
  File.open(vhost_conf, 'w') do |file| 
    file << VHOST_CONF_TPL.gsub(/\{domain\}/, @domain)
  end
end

println "Check Apache Configuartion:"
system('service', 'httpd', 'configtest')

if yes?('Restart Apache Webserver?')
  system('service', 'httpd', 'restart') 
end

print_history 'Done'
